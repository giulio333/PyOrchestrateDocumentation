import{_ as r,c as d,a2 as l,b as h,w as t,a3 as o,j as a,a as e,B as c,o as i,G as p}from"./chunks/framework.BkvI1e0W.js";const f=JSON.parse('{"title":"BaseAgent","description":"","frontmatter":{"title":"BaseAgent"},"headers":[],"relativePath":"learn/agents/built-in-agents/baseagent.md","filePath":"learn/agents/built-in-agents/baseagent.md","lastUpdated":1761471006000}'),k={name:"learn/agents/built-in-agents/baseagent.md"};function g(u,s,E,y,b,v){const n=c("Mermaid");return i(),d("div",null,[s[2]||(s[2]=l(`<h1 id="baseagent" tabindex="-1">BaseAgent <a class="header-anchor" href="#baseagent" aria-label="Permalink to &quot;BaseAgent&quot;">â€‹</a></h1><p>The <strong>BaseAgent</strong> is the foundation of all other agents in PyOrchestrate. It provides the basic structure for any custom agent.</p><h2 id="why-use-baseagent" tabindex="-1">Why use BaseAgent? <a class="header-anchor" href="#why-use-baseagent" aria-label="Permalink to &quot;Why use BaseAgent?&quot;">â€‹</a></h2><p>Use it as a starting point to create your own agents with completely custom behavior.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">â€‹</a></h2><p>You can create a custom agent by inheriting from the <code>BaseProcessAgent</code> or <code>BaseThreadAgent</code> class.</p><table tabindex="0"><thead><tr><th>Method</th><th>Description</th><th>Override</th></tr></thead><tbody><tr><td><a href="#execute">execute</a></td><td>Define the core logic of the agent.</td><td>Required ðŸŸ¢</td></tr><tr><td><a href="#setup">setup</a></td><td>Perform any setup operations required by the agent.</td><td>Optional ðŸŸ </td></tr><tr><td><a href="#on-stop">on_stop</a></td><td>Implement custom logic during external shutdown request.</td><td>Optional ðŸŸ </td></tr><tr><td><a href="#on-close">on_close</a></td><td>Implement custom logic during the agentâ€™s shutdown.</td><td>Optional ðŸŸ </td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Important</p><p>Make sure to call the parent method <strong>for each overridden</strong> method.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BaseProcessAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().setup()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Custom setup logic</span></span></code></pre></div></div><h2 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">â€‹</a></h2><p>The <code>BaseProcessAgent</code> and <code>BaseThreadAgent</code> classes inherit from the <code>BaseAgent</code> class.</p><p>This is the shared structure of both classes.</p>`,11)),(i(),h(o,null,{default:t(()=>[p(n,{id:"mermaid-94",class:"mermaid my-class",graph:"classDiagram%0A%20%20%20%20class%20BaseClass%20%7B%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20BaseAgent%20%7B%0A%20%20%20%20%20%20%20%20%2Brun()%0A%20%20%20%20%20%20%20%20%2Bsetup()%0A%20%20%20%20%20%20%20%20%2Bexecute()%0A%20%20%20%20%20%20%20%20%2Bstop()%0A%20%20%20%20%20%20%20%20%2Bvalidate_config()%0A%20%20%20%20%20%20%20%20%2Bon_stop()%0A%20%20%20%20%20%20%20%20%2Bon_close()%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20BaseProcessAgent%20%7B%0A%20%20%20%20%7D%0A%20%20%20%20class%20BaseThreadAgent%20%7B%0A%20%20%20%20%7D%0A%0A%20%20%20%20BaseClass%20%3C%7C--%20BaseAgent%0A%20%20%20%20BaseAgent%20%3C%7C--%20BaseProcessAgent%0A%20%20%20%20BaseAgent%20%3C%7C--%20BaseThreadAgent%0A"})]),fallback:t(()=>s[0]||(s[0]=[e(" Loading... ")])),_:1})),s[3]||(s[3]=a("p",null,[e("To learn more about "),a("code",null,"BaseClass"),e(" click here.")],-1)),s[4]||(s[4]=a("h2",{id:"sequence-diagram",tabindex:"-1"},[e("Sequence Diagram "),a("a",{class:"header-anchor",href:"#sequence-diagram","aria-label":'Permalink to "Sequence Diagram"'},"â€‹")],-1)),s[5]||(s[5]=a("p",null,[e("The sequence diagram below illustrates the lifecycle of the "),a("code",null,"BaseAgent"),e(" after it is started.")],-1)),(i(),h(o,null,{default:t(()=>[p(n,{id:"mermaid-104",class:"mermaid my-class",graph:"sequenceDiagram%0A%20%20%20%20participant%20Agent%20as%20BaseAgent%0A%20%20%20%20participant%20Config%20as%20Config%0A%20%20%20%20participant%20StateEvents%20as%20StateEvents%0A%20%20%20%20participant%20ControlEvents%20as%20ControlEvents%0A%20%20%20%20participant%20MessageChannel%20as%20MessageChannel%0A%20%20%20%20participant%20Orchestrator%20as%20Orchestrator%0A%0A%20%20%20%20Agent-%3E%3EMessageChannel%3A%20send(AGENT_START)%0A%20%20%20%20MessageChannel-%3E%3EOrchestrator%3A%20forward%20message%0A%20%20%20%20Agent-%3E%3EConfig%3A%20validate_config()%0A%20%20%20%20Agent-%3E%3EControlEvents%3A%20setup_event.wait()%0A%20%20%20%20activate%20ControlEvents%0A%20%20%20%20ControlEvents--%3E%3EAgent%3A%20control%20event%20triggered%0A%20%20%20%20deactivate%20ControlEvents%0A%20%20%20%20Agent-%3E%3EAgent%3A%20setup()%0A%20%20%20%20Agent-%3E%3EMessageChannel%3A%20send(AGENT_SETUP)%0A%20%20%20%20MessageChannel-%3E%3EOrchestrator%3A%20forward%20message%0A%20%20%20%20Agent-%3E%3EStateEvents%3A%20ready_event.set()%0A%20%20%20%20Agent-%3E%3EControlEvents%3A%20execute_event.wait()%0A%20%20%20%20activate%20ControlEvents%0A%20%20%20%20ControlEvents--%3E%3EAgent%3A%20control%20event%20triggered%0A%20%20%20%20deactivate%20ControlEvents%0A%20%20%20%20Agent-%3E%3EAgent%3A%20execute()%0A%20%20%20%20Agent-%3E%3EAgent%3A%20on_close()%0A%20%20%20%20Agent-%3E%3EMessageChannel%3A%20send(AGENT_CLOSE)%0A%20%20%20%20MessageChannel-%3E%3EOrchestrator%3A%20forward%20message%0A%20%20%20%20Agent-%3E%3EStateEvents%3A%20close_event.set()%0A"})]),fallback:t(()=>s[1]||(s[1]=[e(" Loading... ")])),_:1})),s[6]||(s[6]=l(`<h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">â€‹</a></h2><p>The <code>BaseAgent</code> class defines its own configuration object via the <code>Config</code> class.</p><table tabindex="0"><thead><tr><th>Attribute</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>logger_config</td><td><code>LoggerConfig()</code></td><td>Defines configuration for the logger.</td></tr><tr><td>validation_policy</td><td><code>ValidationPolicy()</code></td><td>Defines the validation policy.</td></tr></tbody></table><p>To learn more about the configuration object, click <a href="./../#configuration">here</a>.</p><h2 id="control-events" tabindex="-1">Control Events <a class="header-anchor" href="#control-events" aria-label="Permalink to &quot;Control Events&quot;">â€‹</a></h2><p>The <code>BaseAgent</code> class defines its own control events object via the <code>ControlEvents</code> class.</p><table tabindex="0"><thead><tr><th>Attribute</th><th>Description</th></tr></thead><tbody><tr><td>setup_event</td><td>Event to trigger the setup phase.</td></tr><tr><td>execute_event</td><td>Event to trigger the execution phase.</td></tr><tr><td>stop_event</td><td>Event to trigger the stop phase.</td></tr></tbody></table><p>To learn more about control events, click <a href="./../#controlevents">here</a>.</p><h2 id="state-events" tabindex="-1">State Events <a class="header-anchor" href="#state-events" aria-label="Permalink to &quot;State Events&quot;">â€‹</a></h2><p>The <code>BaseAgent</code> class defines its own state events object via the <code>StateEvents</code> class.</p><table tabindex="0"><thead><tr><th>Attribute</th><th>Description</th></tr></thead><tbody><tr><td>ready_event</td><td>Event to signal that the agent is ready to start.</td></tr><tr><td>close_event</td><td>Event to signal that the agent is closing.</td></tr></tbody></table><p>To learn more about state events, click <a href="./../#stateevents">here</a>.</p><h2 id="use-case" tabindex="-1">Use Case <a class="header-anchor" href="#use-case" aria-label="Permalink to &quot;Use Case&quot;">â€‹</a></h2><p>When no predefined agent meets your requirements, the <code>BaseAgent</code> is ideal for implementing custom logic.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">â€‹</a></h2><h3 id="run" tabindex="-1">run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;run&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@final</span></span></code></pre></div><p>This is the entry point for all agents, encapsulating their entire lifecycle and handling the low-level execution logic. In essence, the <code>run()</code> method in BaseAgent overrides the run method from <code>threading.Thread</code> or <code>multiprocessing.Process</code>.</p><p>It provides <a href="#execute">execute</a> method to be overridden by the derived class to define the core logic of the agent.</p><div class="warning custom-block"><p class="custom-block-title">Do not override</p><p>Marked as <code>@final</code> to prevent overriding in derived class ensuring that the core logic remains consistent across all agents.</p></div><h3 id="setup" tabindex="-1">setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;setup&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@template</span></span></code></pre></div><p>This method is called before the agent starts running. It can be overridden to perform any setup operations required by the agent.</p><div class="tip custom-block"><p class="custom-block-title">Control Events</p><p>The setup method waits for the <code>control_events.setup_event</code> to be triggered, giving external systems the ability to manage when the setup phase starts.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Be sure to call the parent method if you override it.</p></div><h3 id="execute" tabindex="-1">execute <a class="header-anchor" href="#execute" aria-label="Permalink to &quot;execute&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@abstractmethod</span></span></code></pre></div><p>This method is called by the <code>run()</code> method to execute the core logic of the agent. It must be overridden by the derived class to define the agent&#39;s behavior.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Be sure to call the parent method.</p></div><h3 id="stop" tabindex="-1">stop <a class="header-anchor" href="#stop" aria-label="Permalink to &quot;stop&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@final</span></span></code></pre></div><p>This method is called to stop the agent from external systems.</p><p>Keep in mind that agents will not stop immediately. They will complete the current iteration of the <code>execute</code> method before stopping.</p><div class="warning custom-block"><p class="custom-block-title">Do not override</p><p>Marked as <code>@final</code> to prevent overriding in derived class ensuring that the core logic remains consistent across all agents.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To implement custom logic during the agentâ€™s shutdown, override the <a href="#on_stop">on_stop</a> method in your derived class.</p></div><h3 id="on-stop" tabindex="-1">on_stop <a class="header-anchor" href="#on-stop" aria-label="Permalink to &quot;on_stop&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@optional</span></span></code></pre></div><p>This method is called when the agent is stopped. It can be overridden to implement custom logic during the agentâ€™s shutdown.</p><h3 id="on-close" tabindex="-1">on_close <a class="header-anchor" href="#on-close" aria-label="Permalink to &quot;on_close&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@optional</span></span></code></pre></div><p>This method is called when the agent is closed. It can be overridden to implement custom logic during the agentâ€™s shutdown.</p><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">â€‹</a></h2><h3 id="logger" tabindex="-1">Logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;Logger&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger: Logger</span></span></code></pre></div><p>The logger object for the agent. Available levels are <code>DEBUG</code>, <code>INFO</code>, <code>SUCCESS</code>, <code>WARNING</code>, <code>ERROR</code>, and <code>CRITICAL</code>.</p><h3 id="state-events-1" tabindex="-1">State Events <a class="header-anchor" href="#state-events-1" aria-label="Permalink to &quot;State Events&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">state_events: BaseAgent.StateEvents</span></span></code></pre></div><p>The state events object for the agent.</p><h3 id="control-events-1" tabindex="-1">Control Events <a class="header-anchor" href="#control-events-1" aria-label="Permalink to &quot;Control Events&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">control_events: BaseAgent.ControlEvents</span></span></code></pre></div><p>The control events object for the agent.</p><h3 id="config" tabindex="-1">Config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;Config&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config: BaseAgent.Config</span></span></code></pre></div><p>The configuration object for the agent.</p><h3 id="plugin" tabindex="-1">Plugin <a class="header-anchor" href="#plugin" aria-label="Permalink to &quot;Plugin&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin: Plugin</span></span></code></pre></div><p>The plugin object for the agent. It is useful for retrieving user-initialized plugins. The agent will autonomously initialize and release their resources at startup and shutdown.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h2><p>In this example, we create a custom agent that monitors a log file for a specific keyword.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PyOrchestrate.core.agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BaseProcessAgent</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TemperatureMonitorAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BaseProcessAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BaseProcessAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        data_file: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;temperatures.csv&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        threshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">float</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    config: Config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Ensure the CSV data file exists. If not, create it with sample data.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().setup()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.exists(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.data_file):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.warning(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;File not found. Creating an empty file.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.data_file, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).close()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Empty data file created.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Data file found.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Monitor the CSV file for temperature values exceeding the threshold.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().execute()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> random.uniform(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.data_file, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> csvfile:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            writer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> csv.writer(csvfile)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            writer.writerow([temp])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.threshold:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.warning(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;High temperature detected: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> on_close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Log the agent&#39;s shutdown.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TemperatureMonitorAgent stopped.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">â€‹</a></h2><p>For a deeper dive into how agents work and their advanced use cases, explore the <strong>Advanced Insights section</strong>.</p>`,62))])}const C=r(k,[["render",g]]);export{f as __pageData,C as default};
