import{_ as r,c as d,a2 as l,b as o,w as a,a3 as h,j as i,a as e,B as g,o as t,G as p}from"./chunks/framework.BkvI1e0W.js";const b=JSON.parse('{"title":"LoopingAgent","description":"","frontmatter":{"title":"LoopingAgent"},"headers":[],"relativePath":"learn/agents/built-in-agents/loopingagent.md","filePath":"learn/agents/built-in-agents/loopingagent.md","lastUpdated":1761471006000}'),k={name:"learn/agents/built-in-agents/loopingagent.md"};function c(u,s,E,y,m,F){const n=g("Mermaid");return t(),d("div",null,[s[2]||(s[2]=l(`<h1 id="loopingagent" tabindex="-1">LoopingAgent <a class="header-anchor" href="#loopingagent" aria-label="Permalink to &quot;LoopingAgent&quot;">â€‹</a></h1><p>The <strong>LoopingAgent</strong> is basically a <code>BaseAgent</code> that loops through its core logic until it is stopped. It is ideal for implementing custom logic that needs to run continuously.</p><p>It does not provide any sleep or delay mechanism. The derived class must implement its own delay mechanism to control the frequency of the loop.</p><h2 id="why-use-loopingagent" tabindex="-1">Why use LoopingAgent? <a class="header-anchor" href="#why-use-loopingagent" aria-label="Permalink to &quot;Why use LoopingAgent?&quot;">â€‹</a></h2><p>The LoopingAgent is ideal for developers who need an efficient, <strong>thread-safe mechanism</strong> to execute repetitive tasks. Whether running as a process or a thread, it employs appropriate event controls to manage execution reliably. It supports both <strong>finite</strong> and <strong>infinite loops</strong>, and you can always use the <code>stop</code> method to halt the agent safely.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">â€‹</a></h2><p>You can create a custom <code>LoopingAgent</code> by inheriting from the <code>LoopingProcessAgent</code> or <code>LoopingThreadAgent</code> class.</p><table tabindex="0"><thead><tr><th>Method</th><th>Description</th><th>Override</th></tr></thead><tbody><tr><td><a href="#cycle">cycle</a></td><td>Implement the repeated logic of the agent.</td><td>Required ðŸŸ¢</td></tr><tr><td><a href="#setup">setup</a></td><td>Perform any setup operations required by the agent.</td><td>Optional ðŸŸ </td></tr><tr><td><a href="#on-stop">on_stop</a></td><td>Implement custom logic during external shutdown request.</td><td>Optional ðŸŸ </td></tr><tr><td><a href="#on-close">on_close</a></td><td>Implement custom logic during the agentâ€™s shutdown.</td><td>Optional ðŸŸ </td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Important</p><p>Make sure to call the parent method <strong>for each overridden</strong> method.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CustomAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoopingProcessAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line highlighted"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().setup()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Custom setup logic</span></span></code></pre></div></div><h2 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">â€‹</a></h2><p>The <code>LoopingProcessAgent</code> and <code>LoopingThreadAgent</code> classes inherit from the <code>LoopingAgent</code> class.</p><p>This is the shared structure of both classes.</p>`,12)),(t(),o(h,null,{default:a(()=>[p(n,{id:"mermaid-97",class:"mermaid my-class",graph:"classDiagram%0A%20%20%20%20class%20BaseAgent%20%7B%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20LoopingAgent%20%7B%0A%20%20%20%20%20%20%20%20%2Bexecute()%0A%20%20%20%20%20%20%20%20%2Bsetup()%0A%20%20%20%20%20%20%20%20%2Bcycle()%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20BaseProcessAgent%20%7B%0A%20%20%20%20%7D%0A%20%20%20%20class%20BaseThreadAgent%20%7B%0A%20%20%20%20%7D%0A%0A%20%20%20%20BaseAgent%20%3C%7C--%20LoopingAgent%0A%20%20%20%20LoopingAgent%20%3C%7C--%20BaseProcessAgent%0A%20%20%20%20LoopingAgent%20%3C%7C--%20BaseThreadAgent%0A"})]),fallback:a(()=>s[0]||(s[0]=[e(" Loading... ")])),_:1})),s[3]||(s[3]=i("p",null,[e("To learn more about "),i("code",null,"BaseAgent"),e(" click "),i("a",{href:"./baseagent.html"},"here"),e(".")],-1)),s[4]||(s[4]=i("h2",{id:"sequence-diagram",tabindex:"-1"},[e("Sequence Diagram "),i("a",{class:"header-anchor",href:"#sequence-diagram","aria-label":'Permalink to "Sequence Diagram"'},"â€‹")],-1)),s[5]||(s[5]=i("p",null,[e("The sequence diagram below illustrates the lifecycle of the "),i("code",null,"LoopingAgent"),e(" after it is started.")],-1)),(t(),o(h,null,{default:a(()=>[p(n,{id:"mermaid-107",class:"mermaid my-class",graph:"sequenceDiagram%0A%20%20%20%20participant%20Agent%20as%20LoopingAgent%0A%20%20%20%20participant%20Config%20as%20Config%0A%20%20%20%20participant%20StateEvents%20as%20StateEvents%0A%20%20%20%20participant%20ControlEvents%20as%20ControlEvents%0A%20%20%20%20participant%20MessageChannel%20as%20MessageChannel%0A%20%20%20%20participant%20Orchestrator%20as%20Orchestrator%0A%0A%20%20%20%20Agent-%3E%3EMessageChannel%3A%20send(AGENT_START)%0A%20%20%20%20MessageChannel-%3E%3EOrchestrator%3A%20forward%20message%0A%20%20%20%20Agent-%3E%3EConfig%3A%20validate_config()%0A%20%20%20%20Agent-%3E%3EControlEvents%3A%20setup_event.wait()%0A%20%20%20%20activate%20ControlEvents%0A%20%20%20%20ControlEvents--%3E%3EAgent%3A%20control%20event%20triggered%0A%20%20%20%20deactivate%20ControlEvents%0A%20%20%20%20Agent-%3E%3EAgent%3A%20setup()%0A%20%20%20%20Agent-%3E%3EMessageChannel%3A%20send(AGENT_SETUP)%0A%20%20%20%20MessageChannel-%3E%3EOrchestrator%3A%20forward%20message%0A%20%20%20%20Agent-%3E%3EStateEvents%3A%20ready_event.set()%0A%20%20%20%20Agent-%3E%3EControlEvents%3A%20execute_event.wait()%0A%20%20%20%20activate%20ControlEvents%0A%20%20%20%20ControlEvents--%3E%3EAgent%3A%20control%20event%20triggered%0A%20%20%20%20deactivate%20ControlEvents%0A%20%20%20%20Agent-%3E%3EAgent%3A%20execute()%0A%20%20%20%20loop%0A%20%20%20%20%20%20%20%20Agent--%3EAgent%3A%20cycle()%0A%20%20%20%20end%0A%20%20%20%20Agent-%3E%3EAgent%3A%20on_close()%0A%20%20%20%20Agent-%3E%3EMessageChannel%3A%20send(AGENT_CLOSE)%0A%20%20%20%20MessageChannel-%3E%3EOrchestrator%3A%20forward%20message%0A%20%20%20%20Agent-%3E%3EStateEvents%3A%20close_event.set()%0A"})]),fallback:a(()=>s[1]||(s[1]=[e(" Loading... ")])),_:1})),s[6]||(s[6]=l(`<h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">â€‹</a></h2><p>The <code>LoopingAgent</code> class defines its own configuration object via the <code>Config</code> class.</p><table tabindex="0"><thead><tr><th>Attribute</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>logger_config</td><td><code>LoggerConfig()</code></td><td>Defines configuration for the logger.</td></tr><tr><td>validation_policy</td><td><code>ValidationPolicy()</code></td><td>Defines the validation policy.</td></tr><tr><td>limit</td><td>-1</td><td>The number of times the agent will cycle. A value of -1 means the agent will run indefinitely.</td></tr></tbody></table><p>To learn more about the configuration object, click <a href="./../#configuration">here</a>.</p><h2 id="use-case" tabindex="-1">Use Case <a class="header-anchor" href="#use-case" aria-label="Permalink to &quot;Use Case&quot;">â€‹</a></h2><p>When you need to create an agent that performs a specific task repeatedly, the <code>LoopingAgent</code> is the ideal choice. It provides a structure that allows you to focus on the core logic of the agent.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">â€‹</a></h2><h3 id="run" tabindex="-1">run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;run&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@final</span></span></code></pre></div><p>This is the entry point for all agents, encapsulating their entire lifecycle and handling the low-level execution logic. In essence, the <code>run()</code> method in LoopingAgent overrides the run method from <code>threading.Thread</code> or <code>multiprocessing.Process</code>.</p><p>It provides <a href="#execute">execute</a> method to be overridden by the derived class to define the core logic of the agent.</p><div class="warning custom-block"><p class="custom-block-title">Do not override</p><p>Marked as <code>@final</code> to prevent overriding in derived class ensuring that the core logic remains consistent across all agents.</p></div><h3 id="setup" tabindex="-1">setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;setup&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@template</span></span></code></pre></div><p>This method is called before the agent starts running. It can be overridden to perform any setup operations required by the agent.</p><div class="tip custom-block"><p class="custom-block-title">Control Events</p><p>The setup method waits for the <code>control_events.setup_event</code> to be triggered, giving external systems the ability to manage when the setup phase starts.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Be sure to call the parent method if you override it.</p></div><h3 id="cycle" tabindex="-1">cycle <a class="header-anchor" href="#cycle" aria-label="Permalink to &quot;cycle&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@abstractmethod</span></span></code></pre></div><p>This method is called by the <code>run()</code> method to execute the core logic of the agent. It must be overridden by the derived class to define the agent&#39;s behavior.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Be sure to call the parent method.</p></div><h3 id="stop" tabindex="-1">stop <a class="header-anchor" href="#stop" aria-label="Permalink to &quot;stop&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@final</span></span></code></pre></div><p>This method is called to stop the agent from external systems.</p><p>Keep in mind that agents will not stop immediately. They will complete the current iteration of the <code>execute</code> method before stopping.</p><div class="warning custom-block"><p class="custom-block-title">Do not override</p><p>Marked as <code>@final</code> to prevent overriding in derived class ensuring that the core logic remains consistent across all agents.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To implement custom logic during the agentâ€™s shutdown, override the <a href="#on_stop">on_stop</a> method in your derived class.</p></div><h3 id="on-stop" tabindex="-1">on_stop <a class="header-anchor" href="#on-stop" aria-label="Permalink to &quot;on_stop&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@optional</span></span></code></pre></div><p>This method is called when the agent is stopped. It can be overridden to implement custom logic during the agentâ€™s shutdown.</p><h3 id="on-close" tabindex="-1">on_close <a class="header-anchor" href="#on-close" aria-label="Permalink to &quot;on_close&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@optional</span></span></code></pre></div><p>This method is called when the agent is closed. It can be overridden to implement custom logic during the agentâ€™s shutdown.</p><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">â€‹</a></h2><h3 id="logger" tabindex="-1">Logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;Logger&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger: Logger</span></span></code></pre></div><p>The logger object for the agent. Available levels are <code>DEBUG</code>, <code>INFO</code>, <code>SUCCESS</code>, <code>WARNING</code>, <code>ERROR</code>, and <code>CRITICAL</code>.</p><h3 id="state-events" tabindex="-1">State Events <a class="header-anchor" href="#state-events" aria-label="Permalink to &quot;State Events&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">state_events: LoopingAgent.StateEvents</span></span></code></pre></div><p>The state events object for the agent.</p><h3 id="control-events" tabindex="-1">Control Events <a class="header-anchor" href="#control-events" aria-label="Permalink to &quot;Control Events&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">control_events: LoopingAgent.ControlEvents</span></span></code></pre></div><p>The control events object for the agent.</p><h3 id="config" tabindex="-1">Config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;Config&quot;">â€‹</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config: LoopingAgent.Config</span></span></code></pre></div><p>The configuration object for the agent.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h2><p>In this example, we create a custom agent that monitors a log file for a specific keyword.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PyOrchestrate.core.agent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LoopingProcessAgent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogMonitorAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoopingProcessAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Ensure the log file exists.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().setup()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Initializing LogMonitorAgent for file: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.log_file</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.log_file, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Log file found.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FileNotFoundError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.error(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Log file </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.log_file</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> does not exist.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            raise</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Monitor the log file for the specified keyword.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().execute()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Monitoring for keyword: &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.keyword</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.log_file, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.config.keyword </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> line:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.warning(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Keyword found: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">line.strip()</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        except</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Exception</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.error(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Error reading the log file: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> on_stop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Log the agent&#39;s shutdown.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LogMonitorAgent stopped.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="advanced-usage" tabindex="-1">Advanced Usage <a class="header-anchor" href="#advanced-usage" aria-label="Permalink to &quot;Advanced Usage&quot;">â€‹</a></h2><p>For a deeper dive into how agents work and their advanced use cases, explore the <strong>Advanced Insights section</strong>.</p>`,51))])}const A=r(k,[["render",c]]);export{b as __pageData,A as default};
