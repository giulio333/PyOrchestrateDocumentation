import{_ as a,c as s,a2 as e,o as n}from"./chunks/framework.BkvI1e0W.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/built-in-agents/loopingagent.md","filePath":"advanced/built-in-agents/loopingagent.md","lastUpdated":1761471006000}'),t={name:"advanced/built-in-agents/loopingagent.md"};function l(o,i,p,r,h,d){return n(),s("div",null,i[0]||(i[0]=[e(`<h2 id="loopingagent" tabindex="-1">LoopingAgent <a class="header-anchor" href="#loopingagent" aria-label="Permalink to &quot;LoopingAgent&quot;">​</a></h2><p>The <strong>LoopingAgent</strong> is a specialized agent designed for continuous execution. It repeatedly runs its logic in a loop until explicitly stopped or a condition is met.</p><h3 id="key-features" tabindex="-1">Key Features: <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features:&quot;">​</a></h3><ul><li>Infinite or conditional looping logic.</li><li>Ideal for daemon-like tasks.</li><li>Provides hooks for custom start and stop conditions.</li></ul><h3 id="use-case" tabindex="-1">Use Case: <a class="header-anchor" href="#use-case" aria-label="Permalink to &quot;Use Case:&quot;">​</a></h3><p>Monitoring a directory for file changes or running a custom server that operates indefinitely.</p><h3 id="example" tabindex="-1">Example: <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pyorchestrate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LoopingAgent</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FileMonitorAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LoopingAgent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Monitoring files...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,8)]))}const c=a(t,[["render",l]]);export{g as __pageData,c as default};
